@model Study2019.WebUI.Models.UserModel

@{
    ViewBag.Title = "EditProfile";
}

<h2>EditProfile</h2>
<script>
    function Upload(elem) {
        var url_t = "@Url.Action("Get", "Image")/";

        if (elem.files.length != 1) {
            alert("Select Files");
            return;
        }

        var fd = new FormData();
        fd.append("file", elem.files[0]);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadAvatar")',
                    contentType: false,
                    processData: false,
                    data: fd,
                    success: function (result) {
                        $("#ImageAvatarId").val(result.ImageId);
                        $(".AvatarImage").prop("src", url_t + result.ImageId);
                    },
                    error: function (xhr, status, p3) {
                        alert(xhr.responseText);
                    },
                    complete: function () {
                        $(".UploadLabel").html($(".UploadLabel").html());
                    }
                });



    }
</script>
@using (Html.BeginForm("EditProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserModel</h4>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label style="cursor:pointer" for="Avatar">
                    <img class="AvatarImage" title="Change" src="@Url.Action("Get", "Image", new {id=Model.ImageAvatarId })"
                         onerror="this.onerror=null;this.src='https://placeimg.com/200/300/animals';" />
                </label>
                <div style="display:none" class="UploadLabel">
                    <input type="file" onchange="Upload(this);" id="Avatar" name="Avatar" />
                </div>
            </div>
        </div>



        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ImageAvatarId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nickname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birtdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Birtdate", Model.Birtdate.ToString("yyyy-MM-dd"), new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Birtdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SharedProfile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SharedProfile)
                    @Html.ValidationMessageFor(model => model.SharedProfile, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <span>@ViewBag.Error</span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

