@model List<Study2019.WebUI.Models.PostModel>
@using Study2019.WebUI.Utils;
@{
    ViewBag.Title = "Index";
    var postTemplate = Html.Raw(Html.Partial("_postTemplate"));
}
<script type="text/template" id="postTemplate">
    @postTemplate
</script>
<style>
    .PostImage {
        max-height: 100px;
        max-width: 100px;
        border-radius: 5px;
    }
</style>

<h2>Index</h2>
<script>
    var hasMorePosts = true;

    var postTemplate = Hogan.compile($("#postTemplate").html());

    function ShowModal(title, body, callback) {
        var modal = $("#NewPostModal");
        modal.find(".modal-title").text(title);
        modal.find(".modal-body").html(body);
        if (typeof (callback) == "function") {
            var btn = modal.find(".submitButtonModal");
            btn.unbind();
            btn.click(callback);
        }
        modal.modal("show");
    }

    function RenderNewPost(post) {
        HideModal();
        if (typeof (post) == "object") {
            var model = { "Posts": [post] };
            $(".Posts").prepend(postTemplate.render(model));
        }


    }
    function RenderEditedPost(post) {
        HideModal();
        if (typeof (post) == "object") {
            var model = { "Posts": [post] };
            var old = $(".Posts .PostDiv[data-id='" + post.Id + "']");

            old.before(postTemplate.render(model));
            old.remove();
        }


    }



    function HideModal() {
        var modal = $("#NewPostModal");
        modal.modal("hide");
        modal.find(".modal-title").text("");
        modal.find(".modal-body").html("");
        modal.find(".submitButtonModal").unbind();

    }
    $().ready(function () {
        $("#CreatePostButton").on("click", function (e) {
            CreateEdit(RenderNewPost);


        });
        $('#NewPostModal').on('hidden.bs.modal', function (e) {
        HideModal();
        });

    $(window).on("scroll", function() {
        var scrollheight = $(window).scrollTop();
        var contentHeight = $(document).height() - $(window).height();

        if (contentHeight - scrollheight < 50 && hasMorePosts) {
            GetMorePosts();
	    }
    });

        $(document).on("click", ".editPost", editClick);
    });

    function editClick(e) {
        var id = $(this).parent().data("id");
        CreateEdit(RenderEditedPost, id);
    }

    function CreateEdit(renderCallback, id) {
        var title = "edit post";
        if (id == undefined) {
            title = "new post";
            id = "";
        }
        $.get('@Url.Action("CreateEdit")/' + id).done(function (res) {
            ShowModal(title, res, function () {
                    SaveForm(renderCallback);
                })

            });
    }

    function GetMorePosts() {
        var lastId = $(".PostDiv").last().data("id");
        $.get('@Url.Action("GetMorePosts")/' + lastId).done(function (res) {
            if (Array.isArray(res)) {
                if (res.length == 0)
                    hasMorePosts = false
                else
                $(".Posts").append(postTemplate.render({ Posts: res }));

            }
        });
    }
</script>
<div class="modal fade" id="NewPostModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel"></h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary submitButtonModal">Submit</button>
            </div>
        </div>
    </div>
</div>

<button class="btn btn-primary" id="CreatePostButton">Add Post</button>


<div class="Posts">
    @Html.Raw(TemplateHelper.Render(postTemplate.ToString(), new { Posts = Model }))
</div>

<button class="gmpButton" onclick="GetMorePosts()">get more</button>