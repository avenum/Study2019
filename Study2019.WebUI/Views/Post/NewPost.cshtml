@model Study2019.Data.DTO.PostDTO

@{
    ViewBag.Title = "NewPost";
}

<h2>NewPost</h2>
<script>
    function Upload(elem) {
        var url_t = "@Url.Action("Get", "Image")/";

        if (elem.files.length != 1) {
            alert("Select Files");
            return;
        }

        var fd = new FormData();
        fd.append("file", elem.files[0]);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadAvatar")',
                    contentType: false,
                    processData: false,
                    data: fd,
                    success: function (result) {
                        $("#ImageAvatarId").val(result.ImageId);
                        $(".AvatarImage").prop("src", url_t + result.ImageId);
                    },
                    error: function (xhr, status, p3) {
                        alert(xhr.responseText);
                    },
                    complete: function () {
                        $(".UploadLabel").html($(".UploadLabel").html());
                    }
                });



    }

    function SaveForm() {
        alert("hi");

    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PostDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label  for="Avatar" class = "control-label col-md-2">
               Photos <span style="cursor:pointer" class="glyphicon glyphicon-plus-sign"></span>

            </label>
            <div class="col-md-offset-2 col-md-10">
            </div>
            <div style="display:none" class="UploadLabel">
                <input type="file" onchange="Upload(this);" multiple id="Avatar" name="Avatar" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
